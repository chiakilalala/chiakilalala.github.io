<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 無盡光芒</title>
    <link>https://chiakilalala.github.io/posts/</link>
    <description>Recent content in Posts on 無盡光芒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 11 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chiakilalala.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Javascript ES6 繼承</title>
      <link>https://chiakilalala.github.io/posts/javascrip/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chiakilalala.github.io/posts/javascrip/</guid>
      <description>Javascript ES6 ES6 繼承 學會定義子類別。(extends 關鍵字) 學會使用 super 關鍵字呼叫父類別建構式。 學會利用已經定義好的子類別物件。 class 子類別名稱 extends 父類別名稱 建立子類別物件: new 子類別名稱() 定義子類別建構式: constructor{ super(); //呼</description>
    </item>
    
    <item>
      <title>Javascript  ES6 筆記</title>
      <link>https://chiakilalala.github.io/posts/my-first-post/</link>
      <pubDate>Fri, 10 May 2019 06:53:46 +0800</pubDate>
      
      <guid>https://chiakilalala.github.io/posts/my-first-post/</guid>
      <description>#Javascript ES6 筆記 const 常數名稱 let 宣告變數 // var 變數的 scope 以函式為界線，迴圈內外屬於同一個 scope for(var i=0;i&amp;lt;3;i++){ console.log(&amp;quot;i:&amp;quot;+i); } console.log(&amp;quot;outside i:&amp;quot;+i); // 請將上方的變數 i 換用 let 宣告，比較輸出的差異。 // var 變數的 scope 以函式為界線，迴圈內外屬於同一個 scope for(let i=0;i&amp;lt;3;i++){ console.log(&amp;quot;i:&amp;quot;+i); } console.log(&amp;quot;outside i:&amp;quot;+i); let const var 差別</description>
    </item>
    
    <item>
      <title>JS 30day Day2  JS and CSS Clock 筆記</title>
      <link>https://chiakilalala.github.io/posts/first-post/</link>
      <pubDate>Tue, 07 May 2019 07:43:32 +0800</pubDate>
      
      <guid>https://chiakilalala.github.io/posts/first-post/</guid>
      <description>JS 30day Day2 JS and CSS Clock 筆記 demo 目的 學會 js Time 和 用js 操作css 還有基本的ES6語法 步驟 利用css 製作 分針 時針 秒針 取時間的函數 製作js 函數 setＤate 取出現在的時間 const now = new Date(); // const seconds = now.getSeconds(); const mins = now.getMinutes(); const hour = now.getHours(); 3.利用時間</description>
    </item>
    
    <item>
      <title>UI/UX 設計指南分享</title>
      <link>https://chiakilalala.github.io/posts/ui/ux/</link>
      <pubDate>Thu, 11 Apr 2019 14:26:00 +0800</pubDate>
      
      <guid>https://chiakilalala.github.io/posts/ui/ux/</guid>
      <description>UI/UX 設計指南分享 在這邊整理一些網路上整理下來的UI設計的一些小知識，在設計介面與流程時可以參考。 關於UI Element的使用建議參考看看即可，因為UI的世界瞬息萬變，大家使用的方法也不盡相同，不過我覺得</description>
    </item>
    
    <item>
      <title>日本語敬語体系</title>
      <link>https://chiakilalala.github.io/posts/japanese-preview/</link>
      <pubDate>Wed, 10 Apr 2019 14:26:00 +0800</pubDate>
      
      <guid>https://chiakilalala.github.io/posts/japanese-preview/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;日本語の敬語体系は、一般に、大きく尊敬語・謙譲語・丁寧語に分類される。文化審議会国語分科会は、2007年2月に「敬語の指針」を答申し、これに丁重語および美化語を含めた5分類を示している。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;尊敬語&#34;&gt;尊敬語&lt;/h1&gt;

&lt;p&gt;尊敬語は、動作の主体を高めることで、主体への敬意を表す言い方である。動詞に「お（ご）～になる」を付けた形、また、助動詞「（ら）れる」を付けた形などが用いられる。たとえば、動詞「取る」の尊敬形として、「（先生が）お取りになる」「（先生が）取られる」などが用いられる。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://chiakilalala.github.io/posts/english-preview/</link>
      <pubDate>Mon, 01 Apr 2019 14:26:00 +0800</pubDate>
      
      <guid>https://chiakilalala.github.io/posts/english-preview/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Theme Preview</title>
      <link>https://chiakilalala.github.io/posts/theme-preview/</link>
      <pubDate>Sun, 31 Mar 2019 17:49:40 +0800</pubDate>
      
      <guid>https://chiakilalala.github.io/posts/theme-preview/</guid>
      <description>&lt;h1 id=&#34;headings&#34;&gt;Headings&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# H1
## H2
### H3
#### H4
##### H5
###### H6
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>